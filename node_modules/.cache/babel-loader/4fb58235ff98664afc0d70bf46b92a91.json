{"ast":null,"code":"var _jsxFileName = \"/home/shahrukh/Desktop/App2/app/src/Pages/NotePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport notes from '../Assets/data';\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = () => {\n  _s();\n\n  const params = useParams();\n  let noteId = params.id;\n  const navigate = useNavigate(); // console.log(params.id)  \n  // let note = notes.find(note => note.id === Number(noteId))\n\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  let getNote = async () => {\n    if (noteId === 'new') return;\n    let response = await fetch(`http://localhost:3500/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  let createNote = async () => {\n    await fetch(`http://localhost:3500/notes/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...note,\n        'updated': new Date()\n      })\n    });\n  };\n\n  let updateNote = async () => {\n    await fetch(`http://localhost:3500/notes/${noteId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...note,\n        'updated': new Date()\n      })\n    });\n  };\n\n  let handleSubmit = () => {\n    if (noteId != \"new\" && !note.body) {\n      deleteNote();\n    } else if (noteId != \"new\") {\n      updateNote();\n    } else if (noteId === 'new' && note !== null) {\n      createNote();\n    }\n\n    navigate('/');\n  };\n\n  let deleteNote = async () => {\n    await fetch(`http://localhost:3500/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), noteId !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePage, \"lidLK75DfuAshHlim/CXlmMI8Zw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","notes","ReactComponent","ArrowLeft","NotePage","params","noteId","id","navigate","note","setNote","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","Date","updateNote","handleSubmit","deleteNote","e","target","value"],"sources":["/home/shahrukh/Desktop/App2/app/src/Pages/NotePage.jsx"],"sourcesContent":["import React ,{useState, useEffect} from 'react'\nimport {useParams, Link} from 'react-router-dom';\nimport {  useNavigate } from \"react-router-dom\";\nimport notes from '../Assets/data'\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg';\n\n\nconst NotePage = () => {\n  const params = useParams();\n  let noteId = params.id\n  const navigate = useNavigate();\n  // console.log(params.id)  \n  // let note = notes.find(note => note.id === Number(noteId))\n\n  let [note, setNote] = useState(null)\n\n  useEffect(() => {\n    getNote()\n\n  }, [noteId])\n\n  let getNote = async() =>{\n    if (noteId === 'new') return\n    let response  = await fetch(`http://localhost:3500/notes/${noteId}`)\n    let data = await response.json()\n    setNote(data)\n  }\n\n  let createNote= async() => {\n    await fetch(`http://localhost:3500/notes/`, {\n      method : 'PUT',\n      headers : {'Content-Type' : 'application/json'},\n      body : JSON.stringify({...note, 'updated':new Date()})\n    })\n}\n\n  let updateNote= async() => {\n      await fetch(`http://localhost:3500/notes/${noteId}`, {\n        method : 'PUT',\n        headers : {'Content-Type' : 'application/json'},\n        body : JSON.stringify({...note, 'updated':new Date()})\n      })\n  }\n\n  let handleSubmit = () => {\n\n    if (noteId != \"new\" && !note.body) {\n      deleteNote()\n  } else if (noteId != \"new\") {\n      updateNote()\n  } else if (noteId === 'new' && note !== null) {\n      createNote()\n  }\n    navigate('/');\n  }\n\n  let deleteNote = async() => {\n\n      \n      await fetch(`http://localhost:3500/notes/${noteId}`, {\n      method : 'DELETE',\n      headers : {'Content-Type' : 'application/json'},\n      body : JSON.stringify(note)\n    })    \n    navigate('/');\n  }\n\n  return (\n    <div className='note'>\n      <div className='note-header'>\n        <h3>\n          <Link to=\"/\"> <ArrowLeft onClick={handleSubmit} /> </Link>\n        </h3>\n        {noteId !== 'new' ? (\n          <button onClick={deleteNote}>Delete</button>\n        ): <button onClick={handleSubmit}>Done</button>}\n        \n      </div>\n\n      <textarea onChange={(e) => { setNote({...note, 'body': e.target.value})}} value= {note?.body}></textarea>\n    {/* <p>{note?.body}</p> */}\n    </div>\n  )\n}\n\nexport default NotePage"],"mappings":"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"},"metadata":{},"sourceType":"module"}